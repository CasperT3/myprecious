{{ if .Values.storageboss.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: storageboss-scripts
data:
  backup.sh: |

    #!/bin/bash

    function cleanup_backup_on_shutdown {
        echo "Received SIGTERM, doing backup..."

        time (tar -cvzf - -C /ephemeral . \
          | gpg --batch --symmetric --cipher-algo AES256 --passphrase ${GPG_PASSPHRASE} \
          > /dev/stdout \
          | s5cmd pipe s3://elfhosted-tenants/${USERID}.tar.gz)

        time (tar -cvzf - -C /persistent . \
          | gpg --batch --symmetric --cipher-algo AES256 --passphrase ${GPG_PASSPHRASE} \
          > /dev/stdout \
          | s5cmd pipe s3://elfhosted-tenants/${USERID}-persistent.tar.gz)          

    }

    # When we terminate, delete the DNS record
    trap cleanup_backup_on_shutdown SIGTERM

    # Hang around doing nothing until terminated
    while true
    do
        echo "Waiting for SIGTERM to trigger backup"
        sleep infinity
    done
    
  restore.sh: |

    echo "Attempting to restore any data in B2..."
    time ((curl -L https://bagend.elfhosted.com/file/elfhosted-tenants/${USERID}.tar.gz \
      | gpg --batch --decrypt --cipher-algo AES256 --passphrase ${GPG_PASSPHRASE} \
      | tar zxvmf - -C /ephemeral) || echo "Failed to restore, but starting anyway...")

{{ end }}